[[plugins]]
repo = 'Shougo/neocomplete.vim'
on_i = 1
hook_add = '''
  inoremap <expr><TAB> pumvisible() ? "\<C-n>" : "\<TAB>"
  inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<TAB>"

  let g:neocomplete#enable_at_startup = 1
  if !exists('g:neocomplete#sources#omni#input_patterns')
    let g:neocomplete#sources#omni#input_patterns = {}
  endif

  let g:neocomplete#sources#omni#input_patterns.php = '[^. \t]->\h\w*\|\h\w*::'
  let g:neocomplete#sources#omni#input_patterns.go = '\h\w\.\w*'
  let g:neocomplete#sources#omni#input_patterns.py = '\h\w\.\w*'

  autocmd FileType python setlocal omnifunc=jedi#completions
'''

[[plugins]]
repo = 'Shougo/vimfiler'
depends = ['vimproc', 'unite.vim']
hook_add = '''
  " let g:vimfiler_as_default_explorer = 1
  " let g:vimfiler_edit_action = 'tabopen'
  let g:vimfiler_safe_mode_by_default = 0
  let g:vimfiler_ignore_pattern = ''
  autocmd FileType vimfiler nmap <buffer> <Enter>  <Plug>(vimfiler_expand_or_edit)
  autocmd FileType vimfiler nmap <buffer> o        <Plug>(vimfiler_cd_or_edit)
  autocmd FileType vimfiler nmap <buffer> H        <nop>
  autocmd FileType vimfiler nmap <buffer> h        <nop>
  autocmd FileType vimfiler nmap <buffer> l        <Plug>(vimfiler_expand_tree)
  let g:vimfiler_tree_leaf_icon = ' '
  let g:vimfiler_tree_opened_icon = '▾'
  let g:vimfiler_tree_closed_icon = '▸'
  let g:vimfiler_file_icon = ''
  let g:vimfiler_marked_file_icon = '*'
'''

[[plugins]]
repo = 'Shougo/unite-outline'
depends = ['vimproc', 'unite.vim']

[[plugins]]
repo = 'Shougo/unite.vim'
depends = ['vimproc']
hook_add = '''
  " let g:unite_source_grep_default_opts = '--nocolor --nogroup'
  let g:unite_source_grep_max_candidates = 200
  let g:unite_source_grep_recursive_opt = ''
  " let g:unite_enable_start_insert = 1
  let g:unite_source_history_yank_enable =1
  let g:unite_enable_ignore_case = 1
  let g:unite_enable_smart_case = 1
  if executable('ag')
    let g:unite_source_grep_command = 'ag'
    let g:unite_source_grep_default_opts = '--nogroup --nocolor --column'
    let g:unite_source_grep_recursive_opt = ''
  endif

  call unite#custom#source('buffer', 'converters', ['converter_smart_path'])
  call unite#custom#source('file', 'matchers', 'matcher_default')

  nmap <Space> [unite]
  vnoremap /g y:Unite grep::-iRn:<C-r>=escape(@", "\\.*$^[]")<CR><CR>

  nnoremap <silent> [unite]a :<C-u>UniteWithBufferDir -buffer-name=files file file/new<CR>
  nnoremap <silent> [unite]f :<C-u>Unite<Space>file_mru<CR>
  nnoremap <silent> [unite]d :<C-u>Unite<Space>directory_mru<CR>
  nnoremap <silent> [unite]b :<C-u>Unite<Space>buffer<CR>
  nnoremap <silent> [unite]m :<C-u>Unite<Space>file_mru<CR>
  nnoremap <silent> [unite]r :<C-u>Unite<Space>register<CR>
  nnoremap <silent> [unite]t :<C-u>Unite<Space>tab<CR>
  nnoremap <silent> [unite]h :<C-u>Unite<Space>history/yank<CR>
  nnoremap <silent> [unite]o :<C-u>Unite<Space>outline<CR>
  nnoremap <silent> [unite]g :<C-u>Unite<Space>grep<CR>
  nnoremap <silent> [unite]<CR> :<C-u>Unite<Space>file_rec:!<CR>

  autocmd FileType unite call s:unite_my_settings()

  function! s:unite_my_settings()"{{{
    nmap <buffer> <ESC> <Plug>(unite_exit)
  endfunction"}}}
'''
