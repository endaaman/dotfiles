[[plugins]]
repo = 'Shougo/vimshell'

[[plugins]]
repo = 'rking/ag.vim'

[[plugins]]
repo = 'chriskempson/base16-vim'
hook_add = '''
  autocmd VimEnter * set background=dark
  autocmd VimEnter * nested colorscheme base16-default-dark
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  let g:lightline = {
  \ 'colorscheme': 'wombat',
  \ 'active': {
  \   'left': [
  \     [ 'mode', 'paste' ],
  \     [ 'fugitive', 'dirname', 'filename' ],
  \   ],
  \   'right': [
  \     [ 'syntastic', 'lineinfo' ],
  \     [ 'percent' ],
  \     [ 'fileformat', 'fileencoding', 'filetype' ],
  \   ],
  \ },
  \ 'component_function': {
  \   'fugitive': 'LightLineFugitive',
  \   'dirname': 'LightlineDirname',
  \   'filename': 'LightlineFilename',
  \   'fileformat': 'LightlineFileformat',
  \   'filetype': 'LightlineFiletype',
  \   'fileencoding': 'LightlineFileencoding',
  \   'mode': 'LightlineMode',
  \ },
  " \ 'separator': { 'left': '', 'right': '' },
  " \ 'subseparator': { 'left': '|', 'right': '|' }
  \ 'separator': { 'left': '', 'right': '' },
  \ 'subseparator': { 'left': '', 'right': '' }
  \ }

  function! LightLineFugitive()
    let fname = expand('%:t')
    if fname =~ 'NERD_tree'
      return ''
    endif
    return exists('*fugitive#head') ? fugitive#head() : ''
  endfunction

  function! LightlineDirname()
    let fname = expand('%:t')
    if fname =~ 'NERD_tree' || winwidth(0) <= 70
      return ''
    endif
    let dirname = expand('%:h')
    return dirname == '.' ? './' : './' . dirname
  endfunction

  function! LightlineFilename()
    let fname = expand('%:t')
    if fname =~ 'NERD_tree'
      let fname = ''
    elseif fname == ''
      let fname = '[No Name]'
    endif
    return
      \ (&readonly ? ' ' : '') .
      \ fname .
      \ (&modified ? ' +' : '')
  endfunction

  function! LightlineFileformat()
    return winwidth(0) > 80 ? &fileformat : ''
  endfunction

  function! LightlineFiletype()
    return winwidth(0) > 80 ? (&filetype !=# '' ? &filetype : 'no ft') : ''
  endfunction

  function! LightlineFileencoding()
    return winwidth(0) > 80 ? (&fenc !=# '' ? &fenc : &enc) : ''
  endfunction

  function! LightlineMode()
    let fname = expand('%:t')
    if fname =~ 'NERD_tree'
      return 'NERD Tree'
    endif
    return lightline#mode()
  endfunction
'''

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/neoyank.vim'

[[plugins]]
repo = 'ryanoasis/vim-devicons'
hook_add = '''
  let g:WebDevIconsNerdTreeAfterGlyphPadding = ' '
'''

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
  autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
  autocmd FileType nerdtree setlocal nolist
  nnoremap <C-g> :<C-u>NERDTreeFind<CR> <C-l>
  let g:NERDTreeShowHidden = 1
  let g:NERDTreeHijackNetrw = 1
'''

[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

[[plugins]]
repo = 'jiangmiao/auto-pairs'

[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = '''
  map ga <Plug>(EasyAlign)
'''

[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
  let g:indentLine_char = '¦'
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'rhysd/conflict-marker.vim'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'simeji/winresizer'
hook_add = '''
  let g:winresizer_start_key = '<C-e>'
'''

[[plugins]]
repo = 'tomtom/tcomment_vim'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'vim-scripts/copypath.vim'

[[plugins]]
repo = 'vim-scripts/sudo.vim'

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'thinca/vim-textobj-between'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'nixprime/cpsm'
build = 'env PY3=ON ./install.sh'

[[plugins]]
repo = 'mattn/emmet-vim'
hook_add = '''
  let g:user_emmet_leader_key='<C-e>'
'''

[[plugins]]
repo = 'vim-syntastic/syntastic'
hook_add = '''
  set statusline+=%#warningmsg#
  set statusline+=%{SyntasticStatuslineFlag()}
  set statusline+=%*

  let g:syntastic_always_populate_loc_list = 1
  let g:syntastic_auto_loc_list = 1
  let g:syntastic_check_on_open = 1
  let g:syntastic_check_on_wq = 0
'''
