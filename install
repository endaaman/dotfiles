#!/bin/bash

if [ ${EUID:-${UID}} = 0 ]; then
  echo 'Do not run this script as a ROOT USER!'
  exit 1
fi

if ! which git >/dev/null 2>&1; then
  echo 'Please install git'
  exit 1
fi

CYAN='\033[0;34m'
NC='\033[0m'

mkdir -p ~/.cache/vim
mkdir -p ~/.config/byobu
mkdir -p ~/.config/fish/functions
mkdir -p ~/.config/fontconfig
mkdir -p ~/.config/nyaovim
mkdir -p ~/.config/peco
mkdir -p ~/.config/systemd/user
mkdir -p ~/.local/share/systemd/user/
mkdir -p ~/.config/termite
mkdir -p ~/.config/tym
mkdir -p ~/.go
mkdir -p ~/.local/share/fonts
mkdir -p ~/.mlterm
mkdir -p ~/.mpv
mkdir -p ~/src
mkdir -p ~/wineprefixes/current

touch ~/.gitconfig_local

gui=false
nodejs=false
python=false
ruby=false
rust=false
zplug=false
dein=false
firefox=false

for i in "$@" ; do
  case "$i" in
    'gui'     | 'g'    ) gui=true ;;
    'nodejs'  | 'node' ) nodejs=true ;;
    'python'  | 'py'   ) python=true ;;
    'ruby'    | 'rb'   ) ruby=true ;;
    'rust'    | 'rs'   ) rust=true ;;
    'zplug'   | 'zp'   ) zplug=true ;;
    'dein'    | 'dn'   ) dein=true ;;
    'firefox' | 'ff'   ) firefox=true ;;
    'std' )
      nodejs=true
      zplug=true
      dein=true
      ;;
    'full' )
      nodejs=true
      python=true
      ruby=true
      rust=true
      zplug=true
      dein=true
      firefox=true
      ;;
  esac
done

# git
ln -fs ~/dotfiles/gitconfig ~/.gitconfig
ln -fs ~/dotfiles/gitignore_global ~/.gitignore_global
ln -fs ~/dotfiles/gitscripts ~/.gitscripts
# zsh
ln -fs ~/dotfiles/zshrc ~/.zshrc
# bash
ln -fs ~/dotfiles/bashrc ~/.bashrc
# tmux
ln -fs ~/dotfiles/tmux.conf ~/.tmux.conf
ln -fs ~/dotfiles/byobu.conf ~/.config/byobu/.tmux.conf
# vim
ln -fs ~/dotfiles/vimrc ~/.vimrc
ln -fsn ~/dotfiles/vim ~/.vim
# neovim
ln -fsn ~/dotfiles/vim ~/.config/nvim
# editorconfig
ln -fs ~/dotfiles/editorconfig ~/.editorconfig
# tig
ln -fs ~/dotfiles/tigrc ~/.tigrc
# peco
ln -fs ~/dotfiles/peco.json ~/.config/peco/config.json
# yaourt
ln -fs ~/dotfiles/yaourtrc ~/.yaourtrc
# ideavim
ln -fs ~/dotfiles/ideavimrc ~/.ideavimrc
# systemd units
ln -fs ~/dotfiles/systemd/* ~/.local/share/systemd/user/

# GUI
if $gui; then
  # fonts
  ln -fs ~/dotfiles/fonts.conf ~/.config/fontconfig/fonts.conf
  ln -fsn ~/dotfiles/fonts ~/.local/share/fonts/dotfiles
  # wine
  ln -fs ~/.wine ~/wineprefixes/current
  # tym
  ln -fs ~/dotfiles/tym/config.lua ~/.config/tym/config.lua
  ln -fs ~/dotfiles/tym/local.lua ~/.config/tym/local.lua
  # termite
  ln -fs ~/dotfiles/termite/config ~/.config/termite/config
  # mpv
  ln -fs ~/dotfiles/mpv.conf ~/.mpv/input.conf
fi

# NOT USED
if false; then
  # fish
  ln -fs ~/dotfiles/config.fish ~/.config/fish/config.fish
  # X org
  ln -fs ~/dotfiles/Xdefaults ~/.Xdefaults
  ln -fs ~/dotfiles/Xresources ~/.Xresources
  # mlterm
  ln -fs ~/dotfiles/mlterm/* ~/.mlterm/
  # vimperator
  ln -fs ~/dotfiles/vimperatorrc ~/.vimperatorrc
  # vimfx
  ln -fsn ~/dotfiles/vimfx ~/.config/vimfx
  # nyaovim
  ln -fs ~/dotfiles/nyaovimrc.html ~/.config/nyaovim/nyaovimrc.html
  # compton
  ln -fs ~/dotfiles/compton.conf ~/.config/compton.conf
  ln -fs ~/.config/compton.conf ~/.config/marco-compton.conf
  # xkb
  ln -fsn ~/dotfiles/xkb ~/.xkb
fi


if $firefox; then
  echo -e "${CYAN}nstalling Firefox config${NC}"
  dir=`find ~/.mozilla/firefox/ -maxdepth 1 | grep default`
  if [[ -d $dir ]]; then
    dir2=`echo $dir/chrome`
    if [[ -e $dir2 ]]; then
      echo -e "${CYAN}'$dir2' already exists${NC}"
    else
      echo -e "${CYAN}Linked '~/dotfiles/misc/firefox' to '$dir2'${NC}"
      ln -sn ~/dotfiles/misc/firefox $dir2
    fi
  else
    echo -e "${CYAN}Firefox config directory does not exist.${NC}"
  fi
fi

if ! which setxkbmap >/dev/null 2>&1; then
  if [ -e ~/dotfiles/Xmodmap ]; then
    ln -sf ~/dotfiles/Xmodmap ~/.Xmodmap
    setxkbmap && xmodmap ~/.Xmodmap
    echo -e "${CYAN}Loaded Xmodmap${NC}"
  fi
fi

if $nodejs; then
  if [ ! -d ~/.nodebrew ]; then
    echo
    echo -e "${CYAN}Installing nodebrew${NC}"
    curl -L git.io/nodebrew | perl - setup
    echo -e "${CYAN}Installing node.js v7${NC}"
    ~/.nodebrew/nodebrew install-binary 10
  else
    echo -e "${CYAN}Updating nodebrew${NC}"
    ~/.nodebrew/nodebrew selfupdate
  fi
fi


if $python; then
  if [ ! -d ~/.pyenv ]; then
    echo
    echo -e "${CYAN}Installing pyenv${NC}"
    git clone https://github.com/yyuu/pyenv.git ~/.pyenv
  else
    echo -e "${CYAN}Updating pyenv${NC}"
    cd ~/.pyenv
    git pull
    cd
    echo
  fi

  if [ ! -d ~/.pyenv/plugins/pyenv-virtualenv ]; then
    echo
    echo -e "${CYAN}Installing pyenv-virtualenv${NC}"
    git clone https://github.com/yyuu/pyenv-virtualenv.git ~/.pyenv/plugins/pyenv-virtualenv
  else
    echo -e "${CYAN}Updating pyenv-virtualenv${NC}"
    cd ~/.pyenv/plugins/pyenv-virtualenv
    git pull
    cd
    echo
  fi
fi


if $ruby; then
  if [ ! -d ~/.rbenv ]; then
    echo
    echo -e "${CYAN}Installing rbenv${NC}"
    git clone https://github.com/rbenv/rbenv.git ~/.rbenv
  else
    echo -e "${CYAN}Updating rbenv${NC}"
    cd ~/.rbenv
    git pull
    cd
    echo
  fi
  if [ ! -d ~/.rbenv/plugins/ruby-build ]; then
    echo
    echo -e "${CYAN}Installing ruby-build${NC}"
    git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build
  else
    echo -e "${CYAN}Updating ruby-build${NC}"
    cd ~/.rbenv/plugins/ruby-build
    git pull
    cd
    echo
  fi
fi


if $rust; then
  echo -e "${CYAN}Installing rust components${NC}"
  if [ -d ~/.rustup ]; then
    p=~/.zsh/completions/_rustup
    if [ ! -f "$p" ]; then
      rustup completions zsh > $p
    fi
  fi
fi


if $zplug; then
  if [ ! -d ~/.zplug ]; then
    echo
    echo -e "${CYAN}Installing zplug${NC}"
    git clone https://github.com/zplug/zplug ~/.zplug
  else
    echo -e "${CYAN}Updating zplug${NC}"
    cd ~/.zplug
    git pull
    cd
    echo
  fi
fi


if $dein; then
  dein_base_dir=~/.cache/dein/repos/github.com/Shougo
  dein_dir=$dein_base_dir/dein.vim
  mkdir -p "$dein_base_dir"
  if [ ! -d $dein_dir ]; then
    echo
    echo -e "${CYAN}Installing dein${NC}"
    git clone https://github.com/Shougo/dein.vim $dein_dir
  else
    echo -e "${CYAN}Updating dein${NC}"
    cd $dein_dir
    git pull
    cd
    echo
  fi
fi


echo -e "${CYAN}Done.${NC}"
