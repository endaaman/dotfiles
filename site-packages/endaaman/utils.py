from PIL import Image

def paste_center(bg, fg):
    # assert bg.width >= fg.width
    # assert bg.height >= fg.height
    x = (bg.width - fg.width) // 2
    y = (bg.height - fg.height) // 2
    return bg.paste(fg, (x, y))

def pad_to_square(img, new_size=None):
    M = max(img.size)
    bg = Image.new(mode=img.mode, size=(M, M))
    x = (M - img.width) // 2
    y = (M - img.height) // 2
    bg.paste(img, (x, y))
    if new_size:
        bg = bg.resize((new_size, new_size))
    return bg


def log(*args, **kwargs):
    print(*args, **kwargs)
    # logger.info(*args, **kwargs)

def curry(fn, *args, **kwds):
    def callit(*moreargs, **morekwds):
        kw = kwds.copy()
        kw.update(morekwds)
        return fn(*(args+moreargs), **kw)
    return callit

def Curry(c, *args, **kwargs):
    class Curried(c):
        def __init__(self, *more_args, **more_kwargs):
            kw = kwargs.copy()
            kw.update(more_kwargs)
            super().__init__(*(args + more_args), **kw)
    return Curried

class Counter():
    def __init__(self, limit):
        self.i = 0
        self.limit = limit

    def inc(self, diff=1):
        self.i += diff
        return self.i > self.limit


def tee(s, f):
    print(f(s))
    return s

def with_wrote(s):
    print('wrote', s)
    return s

def with_log(s, fmt):
    print(fmt.format(s))
    return s
